{
	"name": "swappingarrayelements",
	"properties": {
		"activities": [
			{
				"name": "leftarray",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "leftelement",
					"value": {
						"value": "@take(variables('inputarray'),pipeline().parameters.index1)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "rightarray",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "rightelement",
					"value": {
						"value": "@skip(variables('inputarray'),add(pipeline().parameters.index2, 1))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "middleelements",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "middleelements",
					"value": {
						"value": "@take(skip(variables('inputarray'),add(pipeline().parameters.index1,1)),sub(pipeline().parameters.index2, add(pipeline().parameters.index1,1)))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "outputarray",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "leftarray",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "rightarray",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "middleelements",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "ouputarray",
					"value": {
						"value": "@createArray(if(empty(variables('leftelement')), '', variables('leftelement'))\n,if(empty(string(variables('inputarray')[pipeline().parameters.index2])),'', variables('inputarray')[pipeline().parameters.index2])\n,if(empty(variables('middleelements')),'',variables('middleelements'))\n,if(empty(string(variables('inputarray')[pipeline().parameters.index1])),'', variables('inputarray')[pipeline().parameters.index1])\n,if(empty(variables('rightelement')),'',variables('rightelement')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "cleanedoutput",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "outputarray",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "cleanedoutput",
					"value": {
						"value": "@json(concat('[',replace(replace(string(variables('ouputarray')), '[','' ),']',''),']'))",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"index1": {
				"type": "int",
				"defaultValue": 0
			},
			"index2": {
				"type": "int",
				"defaultValue": 6
			}
		},
		"variables": {
			"inputarray": {
				"type": "Array",
				"defaultValue": [
					1,
					2,
					3,
					4,
					5,
					6,
					7
				]
			},
			"ouputarray": {
				"type": "Array"
			},
			"cleanedoutput": {
				"type": "Array"
			},
			"leftelement": {
				"type": "Array"
			},
			"rightelement": {
				"type": "Array"
			},
			"middleelements": {
				"type": "Array"
			}
		},
		"annotations": []
	}
}